# .github/workflows/docker-hub-deploy.yml
name: Deploy to Docker Hub

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    name: Build and Push to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          'api-gateway', 
          'authentication-service', 
          'lecturer-service', 
          'payment-service',
          'coursemanagement-service', 
          'storage-service', 
          'notification-service', 
          'support-backend', 
          'email-service', 
          'certificate-service'
        ]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: udeesharukshan12
          password: udeesha@123
      
      # Select the correct build context based on service
      - name: Set build context
        id: set-context
        run: |
          case ${{ matrix.service }} in
            api-gateway)


              echo "context=./backend/API-gateway" >> $GITHUB_OUTPUT
              echo "dockerfile=./backend/API-gateway/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            authentication-service)
              echo "context=./backend/authentication-service" >> $GITHUB_OUTPUT
              echo "dockerfile=./backend/authentication-service/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            lecturer-service)
              echo "context=./backend/lecturer-service" >> $GITHUB_OUTPUT
              echo "dockerfile=./backend/lecturer-service/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            payment-service)
              echo "context=./backend/payment-service-py" >> $GITHUB_OUTPUT
              echo "dockerfile=./backend/payment-service-py/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            coursemanagement-service)
              echo "context=./backend/coursemanagement-service" >> $GITHUB_OUTPUT
              echo "dockerfile=./backend/coursemanagement-service/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            storage-service)
              echo "context=./backend/storage-service" >> $GITHUB_OUTPUT
              echo "dockerfile=./backend/storage-service/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            notification-service)
              echo "context=./backend/notify-by-udeesha" >> $GITHUB_OUTPUT
              echo "dockerfile=./backend/notify-by-udeesha/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            support-backend)
              echo "context=./backend/supportbackend" >> $GITHUB_OUTPUT
              echo "dockerfile=./backend/supportbackend/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            email-service)
              echo "context=./backend/email-service" >> $GITHUB_OUTPUT
              echo "dockerfile=./backend/email-service/Dockerfile" >> $GITHUB_OUTPUT
              ;;
            certificate-service)
              echo "context=./backend/certificate-issue-service" >> $GITHUB_OUTPUT
              echo "dockerfile=./backend/certificate-issue-service/Dockerfile" >> $GITHUB_OUTPUT
              ;;
          esac
      
      # Build and push Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ${{ steps.set-context.outputs.context }}
          file: ${{ steps.set-context.outputs.dockerfile }}
          push: true
          platforms: linux/amd64
          tags: |
            udeesharukshan12/${{ matrix.service }}:latest
            udeesharukshan12/${{ matrix.service }}:${{ github.sha }}
      
      # Log build success
      - name: Log image build success
        run: |
          echo "✅ Successfully built and pushed image: udeesharukshan12/${{ matrix.service }}:latest"
          echo "✅ Also tagged as: udeesharukshan12/${{ matrix.service }}:${{ github.sha }}"
          
  notify-success:
    name: Notify Deployment Success
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deployment Summary
        run: |
          echo "✅ All Docker images successfully pushed to Docker Hub"
          echo "🔄 Images are now available at: docker.io/udeesharukshan12/<service-name>"
          echo "🏷️ Tags: latest, ${{ github.sha }}"
          echo "📅 Deployment time: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"