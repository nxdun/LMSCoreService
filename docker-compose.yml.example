version: "3.8"

services:
  authentication-service:
    container_name: authentication
    build: ./backend/authentication-service/
    ports:
      - "2222:2222" 
    volumes:
      - ./backend/authentication-service:/app
    environment:
      - API_KEY=your_api_key
      - DB=your_database_url
      - JWTPRIVATEKEY=your_jwt_private_key
      - SALT=10
    networks:
      - lms-network

  api-gateway:
    container_name: gateway
    build: ./backend/api-gateway/
    ports:
      - "5001:5001"
    volumes:
      - ./backend/api-gateway:/app
    environment:
      - SERVICE_NAME_LEC=http://lecturer-service:1113
      - SERVICE_NAME_AUTH=http://authentication-service:2222
      - SERVICE_NAME_PAY=http://payment-service:3001
      - SERVICE_NAME_COURSE=http://coursemanagement-service:3002
      - SERVICE_NAME_NOTIFICATION=http://notification-service:1114
      - SERVICE_NAME_PROFILE=http://profile-management-service:1117
      - SERVICE_NAME_STORAGE=http://storage-service:2345
      - SERVICE_NAME_SUPPORT=http://support-backend:8074
      - SERVICE_NAME_EMAIL=http://email-service:8076
      - SERVICE_NAME_CERT=http://certificate-service:8080
    networks:
      - lms-network
    depends_on:
      - authentication-service
      - lecturer-service
      - payment-service
      - coursemanagement-service
      - notification-service
      - storage-service
      - support-backend
      - email-service
      - certificate-service

  lecturer-service:
    container_name: lecturers
    build: ./backend/lecturer-service/
    ports:
      - "1113:1113"
    volumes:
      - ./backend/lecturer-service/src:/app/src
    networks:
      - lms-network

  payment-service:
    container_name: payments
    build: 
      context: ./backend/payment-service-py/
      dockerfile: Dockerfile
    platform: linux/amd64 
    ports:
      - "3001:3001"
    volumes:
      - ./backend/payment-service-py:/app
    environment:
      STRIPE_SECRET_KEY=your_stripe_secret_key
      CLIENT_URL=http://localhost:5173
    networks:
      - lms-network

  coursemanagement-service:
    container_name: courses
    build:
      context: ./backend/coursemanagement-service/
      dockerfile: Dockerfile
    platform: linux/amd64 
    ports:
      - "3002:3002"
    volumes:
      - ./backend/coursemanagement-service:/app
    environment:
      - DB=your_database_url
    networks:
      - lms-network

  storage-service:
    container_name: storage
    build:
      context: ./backend/storage-service/
      dockerfile: Dockerfile
    platform: linux/amd64 
    ports:
      - "2345:2345"
    volumes:
      - ./backend/storage-service:/app
    networks:
      - lms-network

  notification-service:
    container_name: notification
    build:
      context: ./backend/notify-by-udeesha/
      dockerfile: Dockerfile
    platform: linux/amd64 
    ports:
      - "1114:1114"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/notifydb
      - PORT=1114
    depends_on:
      - db
    networks:
      - lms-network

  db:
    image: postgres:14
    platform: linux/amd64
    container_name: postgres
    environment:
      POSTGRES_USER=postgres
      POSTGRES_PASSWORD=your_postgres_password
      POSTGRES_DB=notifydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lms-network

  support-backend:
    build:
      context: ./backend/supportbackend/
      dockerfile: Dockerfile
    platform: linux/amd64 
    container_name: support-backend
    restart: unless-stopped
    ports:
      - "8074:8074" 
    environment:
      - MONGODB_URI=your_mongodb_uri
      - SECRET_KEY=your_secret_key
      - PORT=8074
      - EMAIL_SERVICE_URL=http://email-service:8076
    volumes:
      - ./backend/supportbackend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - lms-network
    depends_on:
      - email-service

  email-service:
    build:
      context: ./backend/email-service/
      dockerfile: Dockerfile
    platform: linux/amd64 
    container_name: email-service
    restart: unless-stopped
    ports:
      - "8076:8076"
    volumes:
      - ./backend/email-service:/usr/app
      - /usr/app/node_modules
    networks:
      - lms-network

  certificate-service:
    build:
      context: ./backend/certificate-issue-service/
      dockerfile: Dockerfile
    platform: linux/amd64
    container_name: certificate-issue-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./backend/certificate-issue-service:/usr/app
      - /usr/app/node_modules
    networks:
      - lms-network

networks:
  lms-network:
    driver: bridge

volumes:
  postgres_data:
